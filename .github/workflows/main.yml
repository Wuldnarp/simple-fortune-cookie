name: pipeline
on: push
env:
  docker_username: ${{ github.actor }}
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}

jobs:
  Unit-tests:
    runs-on: ubuntu-latest
    container: golang:1.16
    steps:
      - name: download code
        uses: actions/checkout@v3
      - name: test backend
        run:  cd ./backend && go test
      - name: test frontend
        run: cd ./frontend && go test

  Build:
    runs-on: ubuntu-latest
    container: golang:1.16
    needs: [Unit-tests]
    steps:
      - name: download code
        uses: actions/checkout@v3
      - name: build backend
        run:  cd ./backend && go build
      - name: build frontend
        run: cd ./frontend && go build
      - name: create artifact
        uses: actions/upload-artifact@v3
        with:
          name: code
          path: .

  Docker-image-backend:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      packages: write
    steps:
    - name: Download code
      uses: actions/download-artifact@v3
      with:
        name: code
        path: .
    - name: build docker
      run: cd ./backend && chmod +x ../ci/backend-build-docker.sh && ../ci/backend-build-docker.sh
    - name: push docker
      run: cd ./backend && chmod +x ../ci/backend-push-docker.sh && ../ci/backend-push-docker.sh

  Docker-image-frontend:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      packages: write
    steps:
    - name: Download code
      uses: actions/download-artifact@v3
      with:
        name: code
        path: .
    - name: build docker
      run: cd ./frontend && chmod +x ../ci/frontend-build-docker.sh && ../ci/frontend-build-docker.sh
    - name: push docker
      run: cd ./frontend && chmod +x ../ci/frontend-push-docker.sh && ../ci/frontend-push-docker.sh
      